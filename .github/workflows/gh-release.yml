on:
  push:
    tags:
    - 'v*'

name: Upload Release Asset

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build libcurl4-openssl-dev \
            libboost-dev libboost-program-options-dev libboost-stacktrace-dev \
            liblog4cxx-dev python3-jinja2 python3 \
            doxygen clang-format git
          mkdir /tmp/iv && cd /tmp/iv
          TAG=$(curl --silent "https://api.github.com/repos/IntroVirt/libmspdb/releases/latest" \
            | jq --raw-output ".. .tag_name? // empty")
          curl --location --silent --show-error --output libmspdb.zip \
            https://github.com/IntroVirt/libmspdb/releases/latest/download/libmspdb-$TAG.zip
          unzip libmspdb.zip
          sudo apt-get install -y ./*.deb
        shell: bash
      - name: Build Release
        run: |
          cd build
          cmake -GNinja -DCMAKE_BUILD_TYPE=Release ..
          ninja
          ninja package
          zip --verbose --junk-paths introvirt.zip ./*.deb
          ls -la introvirt.zip
        shell: bash
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/introvirt.zip
          asset_name: introvirt.zip
          asset_content_type: application/zip
